#!/bin/csh -f
#set echo

# Set initial/default values
set out=/dev/null

# Parse arguments
set i = 1
while($i <= $#argv)
    if("-" == "$argv[$i]" || "-h" == "$argv[$i]" || "-help" == "$argv[$i]") then
        goto usage
    else if("$argv[$i]" == "-v" || "-verbose" == "$argv[$i]") then
        set out=/dev/stdout
    else
        echo
        echo "Whoops - Unrecognized argument:$argv[$i]"
        goto usage
    endif

    @ i++
end

# Do the right thing

# Check to make sure tabledefs has been created
echo Validating local tabledefs
python lib/tables.py -r >& /dev/null
if($status) then
    echo
    echo Whoops - problems with tabledefs file - aborting
    echo Results of check are:
    python lib/tables.py -r -v
    exit
endif

# Determine which rshell to use
set rshell = `which rshell`
if ($status) then
    if (-e ../rshell) then
        set rshell = ../rshell
    else
        echo Whoops - Unable to find rshell tool needed for installation
        exit 10
    endif
endif

# Get the port used by rshell (we assume it is first in the list)
set port=`${rshell} -l |& grep -i micropython | sed -e 's/^[^@]*@//' -e 's/ .*//' -e 's%/cu\.%/tty.%'`
echo Using port: $port >& $out

echo Prepping Pico filesystem
${rshell} --quiet rm /pyboard/boot.py >& $out
${rshell} --quiet repl '~ import machine ~ machine.reset() ~' >& $out
sleep 5

echo Installing libraries
${rshell} --quiet mkdir /pyboard/lib >& $out
${rshell} --quiet mkdir /pyboard/anims >& $out
${rshell} --quiet cp lib/servo.py \
          lib/wave.py \
          lib/pca9685.py \
          lib/sdcard.py \
          lib/memstats.py \
          lib/tables.py \
          lib/tabledefs \
          lib/helpers.py \
          /pyboard/lib
echo Installing main.py
${rshell} --quiet cp main.py /pyboard

echo ''

# Check on the results
${rshell} --quiet repl '~ import memstats ~' >& $out

# Install boot.py last as rshell runs really slowly once it's there
echo Installing boot.py
${rshell} --quiet cp boot.py /pyboard

# Make the link to commlib in the root directory
set pushdsilent=1
pushd ..
rm -f commlib.py
ln -s Pico/commlib.py . 

# Reboot the Pico
echo Resetting Pico
${rshell} --quiet repl '~ import machine ~ machine.reset() ~' >& $out

# Wait a couple of seconds for Pico to restart running main
sleep 5

# Verify installation
echo
echo Verifying installation
echo
popd
python3 ./verifyload.py -p $port

if ! $status then
    echo All files validate
endif

exit

usage:

echo
echo 'Usage:'$0' [-/-h/-help] [-v/-verbose]'
echo '    This tool installs all the code on the Pico.'
echo '-/-h/-help          :Print this helpful info'
echo '-v/-verbose         :Run more verbosely'
echo

